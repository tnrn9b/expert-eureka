{
  "name": "Expert-eureka",
  "tagline": "installing zend framework 2 with apache2.4 on ubunut 16.04",
  "body": "# Installing Zend Framework 2 on Ubuntu 16.04 using Apache2.4\r\n## Background: PHP Apache2 Modules\r\nMake sure you known which version of php you have installed, and that the necessary apache modules are enabled.\r\nTo check your php version enter `php -v` at the command-line. The output should resimble this:\r\n```sh\r\n   you@yourmachine:/$  php -v\r\n   PHP 7.0.6-12+donate.sury.org~xenial+4 (cli) ( NTS )\r\n   Copyright (c) 1997-2016 The PHP Group\r\n   Zend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\r\n    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies\r\n    with Xdebug v2.4.0, Copyright (c) 2002-2016, by Derick Rethans\r\n```\r\nYou don't need to have php7.0 installed. What's important is that php is installed and up to date with the base\r\nrequirements issued in the Zend Framework 2 documentation.\r\n\r\nIn order for php to work with apache you need make sure that you have `libapache2-mod-php` installed. Assuming that\r\nit is installed, check to make sure that the mods are enabled. To do this, enter `cd /etc/apache2/mods-available` and\r\nenter `ls -l | grep php`. If the mods are available, the output should look like this:\r\n```sh\r\n   you@yourmachine:/$ cd /etc/apache2/mods-available\r\n   you@yourmachine:/etc/apache2/mods-available$ ls -l | grep php\r\n   -rw-r--r-- 1 root root  867 May 13 05:03 php7.0.conf\r\n   -rw-r--r-- 1 root root   79 May 13 05:03 php7.0.load\r\n```\r\nEndable the module by entering `sudo a2enmod php7.0` (you need to type the appropriate number for your version) and\r\nrestart apache by entering `sudo service apache2 restart`.\r\n\r\n## Apache setup\r\n\r\nFor Apache >= 2.4 on recent releases of Ubuntu (16.04 in particular), there are essentially six steps to setting up a virtual host:\r\n\r\n1. Create a .conf file `/etc/apache2/sites-available/zf2.project.conf`.\r\n2. Edit the `ServerName` and `DocumentRoot` in your newly created `zf2.project.conf`\r\n3. Edit the `<Directory /var/www/>` directive in /etc/apache2/apache.conf from `AllowOverride None` to `AllowOverride All`.\r\n4. Enable the Rewrite module `sudo a2enmod rewrite` and `sudo service apache2 restart`.\r\n5. Edit the file /etc/hosts to include your the address `127.0.0.1` and your`ServerName`.\r\n6. Enable the virtual host configuration `sudo a2ensite zf2.project.conf` and `sudo service apache2 restart`.\r\n\r\n### Create a .conf file `/etc/apache2/sites-available/zf2.project.conf`.\r\n\r\nHere's the easiest way to do this:\r\n   1. Ctrl + Alt + t (to open up a terminal)\r\n   2. sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/zf2.project.conf\r\n\r\n### Edit the `ServerName` and `DocumentRoot` in your newly created `zf2.project.conf`\r\n\r\n Here's the easiest way to do this (using nano as an editor):\r\n\t1. sudo nano /etc/apache2/sites-available/zf2.project.conf\r\n\t2. make the changes to the lines described above, removing the '#' from\r\n\t   in front of the `ServerName`.\r\n\t   It should look something like this:\r\n```apache\r\n<VirtualHost *:80>\r\n        # The ServerName directive sets the request scheme, hostname and port that\r\n        # the server uses to identify itself. This is used when creating\r\n        # redirection URLs. In the context of virtual hosts, the ServerName\r\n        # specifies what hostname must appear in the request's Host: header to\r\n        # match this virtual host. For the default virtual host (this file) this\r\n        # value is not decisive as it is used as a last resort host regardless.\r\n        # However, you must set it for any further virtual host explicitly.\r\n        ServerName zf2.project.localhost\r\n        ServerAdmin webmaster@localhost\r\n        DocumentRoot /var/www/{NAME_OF_YOUR_ZEND_PROJECT_DIR}/public\r\n\r\n        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,\r\n        # error, crit, alert, emerg.\r\n        # It is also possible to configure the loglevel for particular\r\n        # modules, e.g.\r\n        #LogLevel info ssl:warn\r\n\r\n        ErrorLog ${APACHE_LOG_DIR}/error.log\r\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\r\n\r\n        # For most configuration files from conf-available/, which are\r\n        # enabled or disabled at a global level, it is possible to\r\n        # include a line for only one particular virtual host. For example the\r\n        # following line enables the CGI configuration for this host only\r\n        # after it has been globally disabled with \"a2disconf\".\r\n        # Include conf-available/serve-cgi-bin.conf\r\n</VirtualHost>\r\n\r\n# vim: syntax=apache ts=4 sw=4 sts=4 sr noet\r\n```\r\n### Edit the `<Directory /var/www/>` directive in /etc/apache2/apache.conf from `AllowOverride None` to `AllowOverride All`.\r\n\r\nHere's the easiest way to do this:\r\n   1. sudo nano /etc/apache2/apache2.conf\r\n   2. page down until you see `<Directory /var/www/>`\r\n   3. Edit the block so that it looks like this:\r\n\t```apache\r\n\t<Directory /var/www/>\r\n\t\tOptions Indexes FollowSymLinks\r\n\t\tAllowOverride All\r\n\t\tRequire all granted\r\n\t</Directory>\r\n\t```\r\n\r\n### Enable the Rewrite module.\r\n    \r\n    Do this by entering `sudo a2enmod rewrite` and `sudo service apache2 restart`.\r\n    \r\n### Edit the file /etc/hosts to include your the address `127.0.0.1` and your`ServerName`.\r\n\r\n   Here's the easiest way to do this:\r\n   1. sudo nano /etc/hosts\r\n   2. Add `127.0.0.1       zf2.project.localhost` to the top of the file\r\n      It should look like this:\r\n\r\n      ```apache\r\n      127.0.0.1       zf2.project.localhost # This goes at the top of the list\r\n\t...\r\n      # The following lines are desirable for IPv6 capable hosts\r\n      ```\r\n\r\n### Enable the virtual host configuration\r\n\r\n    Do this by entering `sudo a2ensite zf2.project.conf` and `sudo service apache2 restart`.\r\n    \r\n## Test by navigating to zf2.project.localhost in your browser.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}